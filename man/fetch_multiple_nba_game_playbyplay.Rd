% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fetch_nba_game_playbyplay.R
\name{fetch_multiple_nba_game_playbyplay}
\alias{fetch_multiple_nba_game_playbyplay}
\title{Fetch multiple NBA game play-by-play data}
\usage{
fetch_multiple_nba_game_playbyplay(
  event_ids,
  return_type = "all",
  delay = 0.2,
  raw = FALSE
)
}
\arguments{
\item{event_ids}{Character or Numeric vector. ESPN event IDs.
Vector of unique identifiers for games in ESPN's database.}

\item{return_type}{Character. Type of data to return (default: "all").
Same options as \code{\link{fetch_nba_game_playbyplay}}.}

\item{delay}{Numeric. Delay in seconds between API requests (default: 0.2).
Used to be respectful to ESPN's servers and avoid rate limiting.}

\item{raw}{Logical. If TRUE, assigns raw JSON to global environment
for the first game only (default: FALSE).}
}
\value{
Invisibly returns the combined data frames. The main purpose is global
environment assignment of combined datasets from all games.
}
\description{
Retrieves play-by-play data for multiple NBA games with rate limiting to
be respectful to ESPN's API. This function calls \code{\link{fetch_nba_game_playbyplay}}
for each game and combines the results.
}
\details{
The function processes games sequentially with a configurable delay
between requests. Failed requests for individual games are logged but
do not stop the overall process. The final datasets contain data from
all successfully processed games.

This is particularly useful for building comprehensive play databases,
analyzing coaching strategies across multiple games, or studying
basketball patterns over time.
}
\examples{
\dontrun{
# Get play-by-play for multiple games
game_ids <- c("401656359", "401656360", "401656361")
fetch_multiple_nba_game_playbyplay(game_ids)

# Get only plays data for multiple games
fetch_multiple_nba_game_playbyplay(game_ids, return_type = "plays")

# Use longer delay for larger requests
fetch_multiple_nba_game_playbyplay(game_ids, delay = 0.5)

# Analyze combined results
unique_games <- unique(nba_pbp_game_summary$event_id)
cat("Retrieved play-by-play for", length(unique_games), "games\n")

# Three-point shooting analysis across multiple games
three_pointers <- nba_pbp_plays[
  grepl("3pt", nba_pbp_plays$play_text, ignore.case = TRUE),
  c("event_id", "team_abbreviation", "play_text", "coordinate_x", "coordinate_y")
]
}

}
