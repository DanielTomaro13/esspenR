% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fetch_college_football_game_summary.R
\name{fetch_college_football_game_summary}
\alias{fetch_college_football_game_summary}
\title{Fetch college football game summary using Site API}
\usage{
fetch_college_football_game_summary(game_id, raw = FALSE)
}
\arguments{
\item{game_id}{Character. ESPN game ID for the specific game.
Examples: "400934572" (2017 Army-Navy), "401012678", etc.}

\item{raw}{Logical. If TRUE, assigns raw JSON response to global environment
as 'cfb_game_summary_raw' for debugging purposes (default: FALSE).}
}
\value{
Invisibly returns the processed data frame. The main purpose is global
environment assignment of \code{cfb_game_summary} containing:
\itemize{
\item Game information: ID, date, name, status, scores, attendance
\item Season details: year, type, week number
\item Team details: names, logos, colors, records, rankings, line scores
\item Venue information: name, location, capacity, indoor status
\item Broadcast details: network, type
\item Game conditions: weather, officials count
\item Game state: current situation, last play, notes
}
}
\description{
Retrieves comprehensive game summary information for a specific college football game from ESPN's Site API.
The function fetches detailed game data including teams, scores, venue, weather, officials,
and broadcast information.
}
\details{
The function creates a comprehensive data frame with detailed college football game information.
This provides much more detail than basic scoreboards, including real-time game state,
weather conditions, and complete team performance data.

\strong{Game Information}:
\itemize{
\item Identity: game ID, date, name, season context
\item Status: current status, period, clock, completion status
\item Performance: scores, line scores, winner designation
}

\strong{Team Details}:
\itemize{
\item Identity: team names, abbreviations, logos, colors
\item Performance: current scores, quarterly/period line scores
\item Context: season records, current rankings
}

\strong{Game Environment}:
\itemize{
\item Venue: stadium details, location, capacity, indoor status
\item Weather: temperature, humidity, wind conditions (when available)
\item Broadcast: network, broadcast type
\item Officials: number of officials assigned
}

\strong{Game State} (for live/recent games):
\itemize{
\item Situation: current down and distance, field position
\item Last play: description of most recent play
\item Notes: special game notes or circumstances
}
}
\examples{
\dontrun{
# Get 2017 Army-Navy game summary
fetch_college_football_game_summary("400934572")

# Get recent game
fetch_college_football_game_summary("401520281")

# Check the detailed data
head(cfb_game_summary)

# View game basics
game_basics <- cfb_game_summary[, c("game_name", "game_date", "game_status",
                                   "home_team_display_name", "home_team_score",
                                   "away_team_display_name", "away_team_score")]
print("Game basics:")
print(game_basics)

# View team details
team_details <- cfb_game_summary[, c("home_team_abbreviation", "home_team_record", "home_team_rank",
                                    "away_team_abbreviation", "away_team_record", "away_team_rank")]
print("Team details:")
print(team_details)

# View venue and conditions
venue_info <- cfb_game_summary[, c("venue_full_name", "venue_city", "venue_state",
                                  "venue_capacity", "attendance", "weather_temperature")]
print("Venue and conditions:")
print(venue_info)

# View scoring by period
scoring_info <- cfb_game_summary[, c("home_team_display_name", "home_team_line_score", "home_team_score",
                                    "away_team_display_name", "away_team_line_score", "away_team_score")]
print("Scoring breakdown:")
print(scoring_info)

# Analyze attendance vs capacity
if(!is.na(cfb_game_summary$attendance) && !is.na(cfb_game_summary$venue_capacity)) {
  attendance_num <- as.numeric(cfb_game_summary$attendance)
  capacity_num <- as.numeric(cfb_game_summary$venue_capacity)

  if(!is.na(attendance_num) && !is.na(capacity_num) && capacity_num > 0) {
    attendance_pct <- (attendance_num / capacity_num) * 100
    cat(sprintf("Attendance: \%s / \%s (\%.1f\%\% capacity)\n",
                format(attendance_num, big.mark = ","),
                format(capacity_num, big.mark = ","),
                attendance_pct))
  }
}

# Weather analysis
if(!is.na(cfb_game_summary$weather_temperature)) {
  cat(sprintf("Weather: \%sÂ°F", cfb_game_summary$weather_temperature))
  if(!is.na(cfb_game_summary$weather_wind_speed)) {
    cat(sprintf(", Wind: \%s mph", cfb_game_summary$weather_wind_speed))
  }
  if(!is.na(cfb_game_summary$weather_humidity)) {
    cat(sprintf(", Humidity: \%s\%\%", cfb_game_summary$weather_humidity))
  }
  cat("\n")
}

# Live game information
if(cfb_game_summary$game_status == "In Progress") {
  cat("LIVE GAME STATUS:\n")
  cat(sprintf("Period: \%s, Clock: \%s\n", cfb_game_summary$game_period, cfb_game_summary$game_clock))

  if(!is.na(cfb_game_summary$game_situation)) {
    cat(sprintf("Situation: \%s\n", cfb_game_summary$game_situation))
  }

  if(!is.na(cfb_game_summary$last_play)) {
    cat(sprintf("Last play: \%s\n", cfb_game_summary$last_play))
  }
}
}

}
