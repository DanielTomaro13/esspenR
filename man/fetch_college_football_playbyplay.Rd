% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fetch_college_football_playbyplay.R
\name{fetch_college_football_playbyplay}
\alias{fetch_college_football_playbyplay}
\title{Fetch college football play-by-play data using Site API}
\usage{
fetch_college_football_playbyplay(game_id, raw = FALSE)
}
\arguments{
\item{game_id}{Character. ESPN game ID for the specific game.
Examples: "401677192" (CFP Championship), "400934572", etc.}

\item{raw}{Logical. If TRUE, assigns raw JSON response to global environment
as 'cfb_playbyplay_raw' for debugging purposes (default: FALSE).}
}
\value{
Invisibly returns the processed data frame. The main purpose is global
environment assignment of \code{cfb_playbyplay} containing:
\itemize{
\item Drive information: ID, description, team, start/end position, time, result
\item Play details: type, text description, down/distance, field position
\item Game state: period, clock, score after each play
\item Results: yards gained, scoring plays, drive outcomes
}
}
\description{
Retrieves detailed play-by-play information for a specific college football game from ESPN's Site API.
The function fetches comprehensive drive and play data including down and distance,
field position, play descriptions, and scoring information.
}
\details{
The function creates a detailed data frame with play-by-play information for the entire game.
Each row represents either a play within a drive, with comprehensive information about
game situation, play execution, and results.

\strong{Drive Information}:
\itemize{
\item Identity: drive ID, number, team executing
\item Summary: description, total yards, number of plays, time elapsed
\item Position: starting and ending field position and yards to goal
\item Result: outcome (TD, FG, punt, turnover, etc.)
}

\strong{Play Details}:
\itemize{
\item Situation: down, distance, field position, period, clock
\item Execution: play type, detailed description, team
\item Result: yards gained, new field position, scoring
\item Score: game score after the play
}

\strong{Game Flow}:
\itemize{
\item Sequential: plays are ordered chronologically
\item Contextual: each play includes full game state
\item Comprehensive: all drives and plays included
}
}
\examples{
\dontrun{
# Get play-by-play for CFP Championship
fetch_college_football_playbyplay("401677192")

# Check the data
head(cfb_playbyplay)
nrow(cfb_playbyplay)

# View drive summaries
drive_summary <- cfb_playbyplay[!is.na(cfb_playbyplay$play_id), ] \%>\%
  group_by(drive_number, drive_team_abbreviation) \%>\%
  summarise(
    drive_description = first(drive_description),
    drive_result = first(drive_result),
    plays = n(),
    .groups = 'drop'
  )

print("Drive summaries:")
print(drive_summary)

# View scoring plays
scoring_plays <- cfb_playbyplay[cfb_playbyplay$play_scoring_play == "true",
                               c("drive_number", "play_team_abbreviation",
                                 "play_text", "play_scoring_type",
                                 "play_home_score", "play_away_score")]

if(nrow(scoring_plays) > 0) {
  print("Scoring plays:")
  print(scoring_plays)
}

# Analyze third down conversions
third_downs <- cfb_playbyplay[cfb_playbyplay$play_down == "3" & !is.na(cfb_playbyplay$play_down), ]

if(nrow(third_downs) > 0) {
  third_downs$yards_needed <- as.numeric(third_downs$play_distance)
  third_downs$yards_gained_num <- as.numeric(third_downs$play_yards_gained)
  third_downs$converted <- third_downs$yards_gained_num >= third_downs$yards_needed

  conversion_rate <- mean(third_downs$converted, na.rm = TRUE)
  cat(sprintf("Third down conversion rate: \%.1f\%\% (\%d/\%d)\n",
              conversion_rate * 100,
              sum(third_downs$converted, na.rm = TRUE),
              nrow(third_downs)))
}

# Play type analysis
play_types <- table(cfb_playbyplay$play_type_text[!is.na(cfb_playbyplay$play_type_text)])
print("Most common play types:")
print(head(sort(play_types, decreasing = TRUE), 10))

# Red zone analysis
red_zone_plays <- cfb_playbyplay[
  !is.na(cfb_playbyplay$play_yards_to_goal) &
  as.numeric(cfb_playbyplay$play_yards_to_goal) <= 20 &
  as.numeric(cfb_playbyplay$play_yards_to_goal) > 0, ]

if(nrow(red_zone_plays) > 0) {
  red_zone_scores <- sum(red_zone_plays$play_scoring_play == "true", na.rm = TRUE)
  red_zone_drives <- length(unique(red_zone_plays$drive_id))

  cat(sprintf("Red zone efficiency: \%d scoring plays in \%d red zone drives\n",
              red_zone_scores, red_zone_drives))
}

# Game momentum - score progression
scoring_progression <- cfb_playbyplay[
  !is.na(cfb_playbyplay$play_home_score) & !is.na(cfb_playbyplay$play_away_score),
  c("play_sequence_number", "play_period", "play_clock",
    "play_home_score", "play_away_score", "play_scoring_play")]

if(nrow(scoring_progression) > 0) {
  scoring_progression$score_diff <- as.numeric(scoring_progression$play_home_score) -
                                   as.numeric(scoring_progression$play_away_score)

  print("Score progression (when scoring occurred):")
  print(head(scoring_progression[scoring_progression$play_scoring_play == "true", ], 10))
}

# Time of possession by team
if(require(dplyr, quietly = TRUE)) {
  drive_times <- cfb_playbyplay \%>\%
    filter(!is.na(drive_time_elapsed) & drive_time_elapsed != "") \%>\%
    select(drive_team_abbreviation, drive_time_elapsed) \%>\%
    distinct()

  # Convert time elapsed to seconds (simplified - assumes MM:SS format)
  if(nrow(drive_times) > 0) {
    print("Drive times by team:")
    print(head(drive_times, 10))
  }
}
}

}
