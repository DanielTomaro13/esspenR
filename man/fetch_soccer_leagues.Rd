% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fetch_soccer_leagues.R
\name{fetch_soccer_leagues}
\alias{fetch_soccer_leagues}
\title{Fetch available soccer leagues from ESPN API}
\usage{
fetch_soccer_leagues(limit = 100, raw = FALSE)
}
\arguments{
\item{limit}{Integer. Maximum number of leagues to fetch (default: 100).
ESPN API returns 25 leagues per page, so this controls how many to process.}

\item{raw}{Logical. If TRUE, assigns raw JSON response to global environment
as 'soccer_leagues_raw' for debugging purposes (default: FALSE).}
}
\value{
Invisibly returns the processed data frame. The main purpose is global
environment assignment of:
\itemize{
\item \code{soccer_leagues} - Data frame with league information
\item \code{soccer_leagues_raw} - Raw JSON response (if raw = TRUE)
}
}
\description{
Retrieves a comprehensive list of soccer leagues available through ESPN's API.
This function provides league information including names, slugs, and metadata
needed for further API calls to specific leagues.
}
\details{
The function creates a structured data frame with comprehensive league information:

\strong{League Information} (\code{soccer_leagues}):
\itemize{
\item \code{league_id} - Unique ESPN league identifier
\item \code{league_name} - Full league name (e.g., "English Premier League")
\item \code{league_slug} - URL-friendly league identifier (e.g., "eng.1")
\item \code{league_abbreviation} - Short league code (e.g., "EPL")
\item \code{league_short_name} - Abbreviated league name
\item \code{is_tournament} - Boolean indicating if it's a tournament format
\item \code{has_standings} - Boolean indicating if standings are available
\item \code{league_uid} - ESPN universal identifier
\item \code{league_guid} - ESPN global unique identifier
\item \code{logo_href} - URL to league logo image
\item \code{logo_alt} - Alt text for league logo
}

\strong{Common League Slugs}:
\itemize{
\item \code{eng.1} - English Premier League
\item \code{esp.1} - Spanish La Liga
\item \code{ger.1} - German Bundesliga
\item \code{ita.1} - Italian Serie A
\item \code{fra.1} - French Ligue 1
\item \code{uefa.champions} - UEFA Champions League
\item \code{fifa.world} - FIFA World Cup
\item \code{usa.1} - Major League Soccer (MLS)
}
}
\examples{
\dontrun{
# Get first 100 leagues (default)
fetch_soccer_leagues()

# Get first 50 leagues
fetch_soccer_leagues(limit = 50)

# Get major leagues only
fetch_soccer_leagues(limit = 10)

# View the leagues data frame
head(soccer_leagues)
View(soccer_leagues)

# Find specific leagues
premier_league <- soccer_leagues[soccer_leagues$league_slug == "eng.1", ]
champions_league <- soccer_leagues[grepl("Champions", soccer_leagues$league_name), ]

# Get major European leagues
major_leagues <- soccer_leagues[
  soccer_leagues$league_slug \%in\% c("eng.1", "esp.1", "ger.1", "ita.1", "fra.1"),
]

# Find tournament competitions
tournaments <- soccer_leagues[soccer_leagues$is_tournament == "TRUE", ]

# Find leagues with standings available
leagues_with_standings <- soccer_leagues[soccer_leagues$has_standings == "TRUE", ]

# Search by league name
world_cup <- soccer_leagues[grepl("World Cup", soccer_leagues$league_name, ignore.case = TRUE), ]
mls <- soccer_leagues[grepl("Major League Soccer", soccer_leagues$league_name), ]

# Get league slugs for API calls
league_slugs <- soccer_leagues$league_slug
cat("Available league slugs:\\\\n", paste(league_slugs, collapse = ", "))

# Example: Use slug for further API calls
# fetch_soccer_standings("eng.1")  # Premier League standings
# fetch_soccer_schedule("esp.1")   # La Liga schedule

# Get raw data for debugging
fetch_soccer_leagues(limit = 5, raw = TRUE)
}

}
\seealso{
Use the league slugs from this function for other soccer API calls:
\itemize{
\item League standings: \code{/sports/soccer/{league_slug}/standings}
\item League schedule: \code{/sports/soccer/{league_slug}/scoreboard}
\item Team information: \code{/sports/soccer/{league_slug}/teams}
}
}
