% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fetch_nfl_athlete_splits.R
\name{fetch_multiple_nfl_athlete_splits}
\alias{fetch_multiple_nfl_athlete_splits}
\title{Fetch multiple NFL athletes' splits data}
\usage{
fetch_multiple_nfl_athlete_splits(
  athlete_ids,
  season = NULL,
  season_type = "all",
  delay = 0.2,
  raw = FALSE
)
}
\arguments{
\item{athlete_ids}{Character or Numeric vector. ESPN athlete IDs.
Vector of unique identifiers for athletes in ESPN's database.}

\item{season}{Character or Numeric. Season year (optional).
If not provided, fetches current/latest season data for all athletes.}

\item{season_type}{Character. Season type to fetch (default: "all").
Same options as \code{\link{fetch_nfl_athlete_splits}}.}

\item{delay}{Numeric. Delay in seconds between API requests (default: 0.2).
Used to be respectful to ESPN's servers and avoid rate limiting.}

\item{raw}{Logical. If TRUE, assigns raw JSON to global environment
for the first athlete only (default: FALSE).}
}
\value{
Invisibly returns the combined data frame. The main purpose is global
environment assignment:
\itemize{
\item \code{nfl_athlete_splits} - Combined splits data from all athletes
}
}
\description{
Retrieves splits data for multiple NFL athletes with rate limiting to
be respectful to ESPN's Web API. This function calls \code{\link{fetch_nfl_athlete_splits}}
for each athlete and combines the results.
}
\details{
The function processes athletes sequentially with a configurable delay
between requests. Failed requests for individual athletes are logged but
do not stop the overall process. Duplicate records are automatically
removed from the final combined dataset.

The splits data is particularly useful for comparative analysis between
players under similar conditions (e.g., comparing quarterbacks' performance
in prime time games, or running backs' performance in red zone situations).
}
\examples{
\dontrun{
# Get splits for multiple quarterbacks
qb_ids <- c("3918298", "3139477", "4035671")  # Allen, Mahomes, Burrow
fetch_multiple_nfl_athlete_splits(qb_ids)

# Get specific season splits for multiple players
fetch_multiple_nfl_athlete_splits(qb_ids, season = "2024")

# Get regular season splits only
fetch_multiple_nfl_athlete_splits(qb_ids, season_type = "regular")

# Use longer delay for larger requests
fetch_multiple_nfl_athlete_splits(qb_ids, delay = 0.5)

# Analyze combined results
unique_athletes <- unique(nfl_athlete_splits$athlete_id)
cat("Retrieved splits for", length(unique_athletes), "athletes\n")

# Compare home/away performance across players
location_data <- nfl_athlete_splits[
  nfl_athlete_splits$split_category == "byLocation" &
  nfl_athlete_splits$stat_name == "passingYards",
  c("athlete_id", "split_name", "stat_value")
]

# Compare performance in wins vs losses
outcome_data <- nfl_athlete_splits[
  nfl_athlete_splits$split_category == "byOutcome" &
  nfl_athlete_splits$stat_name == "QBRating",
  c("athlete_id", "split_name", "stat_value")
]
}

}
\seealso{
\code{\link{fetch_nfl_athlete_splits}} for single athlete data,
\code{\link{fetch_multiple_nfl_athlete_gamelogs}} for game-by-game data
}
