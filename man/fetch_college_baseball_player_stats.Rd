% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fetch_college_baseball_player_stats.R
\name{fetch_college_baseball_player_stats}
\alias{fetch_college_baseball_player_stats}
\title{Fetch detailed college_baseball player statistics using ESPN Web API}
\usage{
fetch_college_baseball_player_stats(player_id, raw = FALSE)
}
\arguments{
\item{player_id}{Character or numeric. college_baseball player ID from ESPN
(e.g., "30951" for Bryce Harper, "33712" for Kyle Schwarber).}

\item{raw}{Logical. If TRUE, assigns raw JSON response to global environment
as 'college_baseball_player_stats_raw' for debugging purposes (default: FALSE).}
}
\value{
Invisibly returns a list with both datasets. The main purpose is global
environment assignment of:
\itemize{
\item \code{college_baseball_player_season_summary}: Season averages and totals by season type
\item \code{college_baseball_player_gamelog}: Game-by-game statistics organized by category
}
}
\description{
Retrieves comprehensive statistics for a specific college_baseball player from ESPN's Web API.
Extracts data directly from the seasonTypes structure - fast and reliable!
}
\details{
The function extracts data directly from ESPN's seasonTypes structure which contains:

\strong{Season Summary} (\code{seasonTypes$summary}):
\itemize{
\item Averages and totals for each season type (Regular Season, Playoffs, Spring Training)
\item Complete statistical categories for season-level analysis
\item Separate batting and pitching statistics
}

\strong{Game Log} (\code{seasonTypes$categories$events}):
\itemize{
\item Individual game statistics organized by categories (monthly, playoff rounds)
\item Complete box score data for each game
\item Season and category context for filtering and analysis
}

\strong{Batting Statistics} (16 total):
AVG, OBP, SLG, OPS, At-Bats, Runs, Hits, Doubles, Triples, Home Runs,
RBI, Walks, Strikeouts, Stolen Bases, Caught Stealing, Errors

\strong{Pitching Statistics} (15 total):
ERA, WHIP, Innings Pitched, Hits Allowed, Runs Allowed, Earned Runs,
Home Runs Allowed, Walks Allowed, Strikeouts, Wins, Losses, Saves,
Holds, Blown Saves, Blown Save Losses
}
\examples{
\dontrun{
# Get Bryce Harper statistics
fetch_college_baseball_player_stats("30951")

# Check season summaries
print(college_baseball_player_season_summary)

# Check game log
head(college_baseball_player_gamelog)

# View regular season batting averages
reg_season_batting <- college_baseball_player_season_summary[
  college_baseball_player_season_summary$season_display_name == "2024 Regular Season" &
  college_baseball_player_season_summary$stat_category == "batting" &
  college_baseball_player_season_summary$stat_type == "avg", ]
print(reg_season_batting[, c("avg", "home_runs", "rbi", "ops")])

# View recent games
recent_games <- head(college_baseball_player_gamelog[
  college_baseball_player_gamelog$stat_category == "batting" &
  !is.na(college_baseball_player_gamelog$at_bats), ], 10)
print(recent_games[, c("category_display_name", "at_bats", "hits", "home_runs", "rbi")])

# View pitching statistics (for pitchers)
pitching_stats <- college_baseball_player_season_summary[
  college_baseball_player_season_summary$stat_category == "pitching" &
  college_baseball_player_season_summary$stat_type == "total", ]
print(pitching_stats[, c("era", "whip", "innings_pitched", "strikeouts_pitching", "wins")])

# Calculate batting average from game log
batting_games <- college_baseball_player_gamelog[
  college_baseball_player_gamelog$stat_category == "batting" &
  !is.na(college_baseball_player_gamelog$at_bats) &
  as.numeric(college_baseball_player_gamelog$at_bats) > 0, ]

total_hits <- sum(as.numeric(batting_games$hits), na.rm = TRUE)
total_at_bats <- sum(as.numeric(batting_games$at_bats), na.rm = TRUE)
calculated_avg <- round(total_hits / total_at_bats, 3)

print(paste("Calculated batting average:", calculated_avg))
}

}
