% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fetch_college_football_season.R
\name{fetch_multiple_cfb_seasons}
\alias{fetch_multiple_cfb_seasons}
\title{Fetch season information for multiple college football years}
\usage{
fetch_multiple_cfb_seasons(years, delay = 0.3, raw = FALSE)
}
\arguments{
\item{years}{Integer vector. Years to fetch season information for.
Examples: c(2022, 2023, 2024), 2020:2024, etc.}

\item{delay}{Numeric. Delay in seconds between API requests (default: 0.3).
Used to be respectful to ESPN's servers.}

\item{raw}{Logical. If TRUE, assigns raw JSON to global environment
for the first year only (default: FALSE).}
}
\value{
Invisibly returns the combined data frame. The main purpose is global
environment assignment of combined \code{cfb_season} from all years.
}
\description{
Retrieves season information for multiple years with rate limiting.
This function calls \code{\link{fetch_college_football_season}} for each year
and combines the results.
}
\examples{
\dontrun{
# Get last 3 seasons
fetch_multiple_cfb_seasons(2022:2024)

# Get specific years
fetch_multiple_cfb_seasons(c(2020, 2021, 2023, 2024))

# Analyze season patterns across years
if(require(dplyr, quietly = TRUE)) {
  season_patterns <- cfb_season \%>\%
    filter(!is.na(season_type_name)) \%>\%
    mutate(
      start_date = as.Date(season_type_start_date),
      end_date = as.Date(season_type_end_date),
      duration = as.numeric(end_date - start_date),
      start_month = format(start_date, "\%B"),
      end_month = format(end_date, "\%B")
    ) \%>\%
    group_by(season_type_name) \%>\%
    summarise(
      avg_duration = round(mean(duration, na.rm = TRUE)),
      typical_start = names(sort(table(start_month), decreasing = TRUE))[1],
      typical_end = names(sort(table(end_month), decreasing = TRUE))[1],
      years_available = n_distinct(season_year),
      .groups = 'drop'
    )

  print("Season patterns across years:")
  print(season_patterns)
}
}

}
\seealso{
\code{\link{fetch_college_football_season}} for single year data
}
