% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fetch_nhl_team_news.R
\name{fetch_multiple_nhl_team_news}
\alias{fetch_multiple_nhl_team_news}
\title{Fetch NHL news for multiple teams}
\usage{
fetch_multiple_nhl_team_news(teams, limit = 25, delay = 0.5, raw = FALSE)
}
\arguments{
\item{teams}{Character vector. Team abbreviations or IDs to fetch news for.}

\item{limit}{Integer. Maximum number of articles per team (default: 25).}

\item{delay}{Numeric. Delay in seconds between API requests (default: 0.5).
Used to be respectful to ESPN's servers.}

\item{raw}{Logical. If TRUE, assigns raw JSON to global environment
for the first team only (default: FALSE).}
}
\value{
Invisibly returns the combined data frame. The main purpose is global
environment assignment of combined \code{nhl_team_news} from all teams.
}
\description{
Retrieves team-specific news for multiple NHL teams with rate limiting.
This function calls \code{\link{fetch_nhl_team_news}} for each team
and combines the results.
}
\details{
The function processes teams sequentially with a configurable delay
between requests. Failed requests for individual teams are logged but
do not stop the overall process. The final dataset contains news data from
all successfully processed teams.

This is particularly useful for league-wide news analysis,
content aggregation, or monitoring multiple teams simultaneously.
}
\examples{
\dontrun{
# Get news for Original Six teams
fetch_multiple_nhl_team_news(c("BOS", "NYR", "MTL", "TOR", "CHI", "DET"))

# Get news for specific teams with fewer articles each
fetch_multiple_nhl_team_news(c("BOS", "TB", "NYR"), limit = 15)

# Use longer delay for larger requests
atlantic_teams <- c("BOS", "BUF", "DET", "FLA", "MTL", "OTT", "TB", "TOR")
fetch_multiple_nhl_team_news(atlantic_teams, delay = 1.0)

# Check combined results
head(nhl_team_news)
table(nhl_team_news$team_id)

# Find trade deadline coverage
trade_news <- nhl_team_news[
  grepl("trade|deadline", nhl_team_news$headline, ignore.case = TRUE),
  c("team_id", "headline", "published")
]
print(trade_news)
}

}
\seealso{
\code{\link{fetch_nhl_team_news}} for single team data
}
