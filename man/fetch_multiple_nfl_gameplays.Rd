% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fetch_nfl_gameplays.R
\name{fetch_multiple_nfl_gameplays}
\alias{fetch_multiple_nfl_gameplays}
\title{Fetch multiple NFL game plays data}
\usage{
fetch_multiple_nfl_gameplays(
  event_ids,
  limit = 300,
  return_type = "all",
  delay = 0.2,
  raw = FALSE
)
}
\arguments{
\item{event_ids}{Character or Numeric vector. ESPN event IDs.
Vector of unique identifiers for games in ESPN's database.}

\item{limit}{Numeric. Maximum number of plays per game to retrieve (default: 300).}

\item{return_type}{Character. Type of data to return (default: "all").
Same options as \code{\link{fetch_nfl_gameplays}}.}

\item{delay}{Numeric. Delay in seconds between API requests (default: 0.2).
Used to be respectful to ESPN's servers and avoid rate limiting.}

\item{raw}{Logical. If TRUE, assigns raw JSON to global environment
for the first game only (default: FALSE).}
}
\value{
Invisibly returns the combined data frames. The main purpose is global
environment assignment of combined datasets from all games.
}
\description{
Retrieves plays data for multiple NFL games with rate limiting to
be respectful to ESPN's Core API. This function calls \code{\link{fetch_nfl_gameplays}}
for each game and combines the results.
}
\details{
The function processes games sequentially with a configurable delay
between requests. Failed requests for individual games are logged but
do not stop the overall process. The final datasets contain data from
all successfully processed games.

This is particularly useful for building comprehensive play databases
with detailed participant information across multiple games, enabling
advanced player performance tracking and team analysis.
}
\examples{
\dontrun{
# Get plays for multiple games from same week
week1_games <- c("401671617", "401671618", "401671619")
fetch_multiple_nfl_gameplays(week1_games)

# Get only participant data for multiple games
fetch_multiple_nfl_gameplays(week1_games, return_type = "participants")

# Use higher limit and longer delay for larger requests
fetch_multiple_nfl_gameplays(week1_games, limit = 500, delay = 0.5)

# Analyze combined results
unique_games <- unique(nfl_plays_summary$event_id)
cat("Retrieved plays for", length(unique_games), "games\n")

# Play type analysis across multiple games
play_types <- table(nfl_plays_plays$type_text)
print(play_types)
}

}
\seealso{
\code{\link{fetch_nfl_gameplays}} for single game data
}
