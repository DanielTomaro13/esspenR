% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fetch_mlb_playbyplay.R
\name{fetch_mlb_game_playbyplay}
\alias{fetch_mlb_game_playbyplay}
\title{Fetch MLB game play-by-play data using ESPN API}
\usage{
fetch_mlb_game_playbyplay(event_id, return_type = "all", raw = FALSE)
}
\arguments{
\item{event_id}{Character or Numeric. ESPN event ID (required).
The unique identifier for the game in ESPN's database.}

\item{return_type}{Character. Type of data to return (default: "all").
Options are:
\itemize{
\item "game_summary" - Basic game information and totals
\item "inning_summary" - Inning-by-inning scoring summary
\item "plays" - Individual play-by-play data
\item "all" - All data types combined
}}

\item{raw}{Logical. If TRUE, assigns raw JSON response to global environment
as 'mlb_pbp_raw' for debugging purposes (default: FALSE).}
}
\value{
Invisibly returns the processed data. The main purpose is global
environment assignment based on return_type:
\itemize{
\item \code{mlb_pbp_game_summary} - Game summary data frame
\item \code{mlb_pbp_inning_summary} - Inning summary data frame
\item \code{mlb_pbp_plays} - Complete plays data frame with all ESPN fields
\item \code{mlb_pbp_raw} - Raw JSON response (if raw = TRUE)
}
}
\description{
Retrieves detailed play-by-play information from ESPN's MLB API.
The function fetches comprehensive play data for a specific MLB game.
}
\details{
The function creates structured data frames with comprehensive play-by-play information:

\strong{Game Summary} (\code{mlb_pbp_game_summary}):
\itemize{
\item Game details: event_id, game_date, game_status, season info
\item Team matchup: home_team vs away_team with final scores
\item Venue, attendance, and total plays/innings information
}

\strong{Inning Summary} (\code{mlb_pbp_inning_summary}):
\itemize{
\item Inning-by-inning scoring breakdown (top/bottom of each inning)
\item Runs scored per half-inning
\item Play counts per half-inning
\item Running score after each half-inning
}

\strong{Plays} (\code{mlb_pbp_plays}):
\itemize{
\item Complete ESPN plays data frame with all 30+ columns preserved
\item Nested data frames: period, type, participants, pitchCount, etc.
\item Pitch tracking: velocity, type, coordinates, trajectory
\item Hit data: coordinates, distance, launch angle
\item Baserunner tracking: onFirst, onSecond, onThird athlete IDs
\item Game situation: outs, scores, at-bat details
}

\strong{Rich Data Access Examples}:
\itemize{
\item \code{mlb_pbp_plays$pitchVelocity} - Pitch speeds
\item \code{mlb_pbp_plays$pitchType$text} - Pitch type names
\item \code{mlb_pbp_plays$participants} - Batter/pitcher details
\item \code{mlb_pbp_plays$onSecond$athlete$id} - Runner on second
\item \code{mlb_pbp_plays$pitchCoordinate} - Pitch location (x,y)
}
}
\examples{
\dontrun{
# Get complete play-by-play for a specific game
fetch_mlb_game_playbyplay(event_id = "401581132")

# Check what data was created
head(mlb_pbp_game_summary)
head(mlb_pbp_inning_summary)
head(mlb_pbp_plays)

# Access nested data structures
mlb_pbp_plays$period$number          # Inning numbers
mlb_pbp_plays$pitchType$text         # Pitch type names
mlb_pbp_plays$pitchCoordinate$x      # Pitch location X

# Get only plays data
fetch_mlb_game_playbyplay(event_id = "401581132", return_type = "plays")

# Analyze four-seam fastballs over 95 mph
fastballs <- mlb_pbp_plays[
  mlb_pbp_plays$pitchType$text == "Four-seam FB" &
  mlb_pbp_plays$pitchVelocity > 95 &
  !is.na(mlb_pbp_plays$pitchVelocity),
]

# Find all scoring plays
scoring_plays <- mlb_pbp_plays[
  mlb_pbp_plays$scoringPlay == TRUE,
  c("text", "homeScore", "awayScore", "scoreValue")
]

# Analyze pitch sequences in specific counts
two_strike_pitches <- mlb_pbp_plays[
  mlb_pbp_plays$pitchCount$strikes == 2 &
  !is.na(mlb_pbp_plays$pitchType$text),
]

# View baserunner situations
risp_situations <- mlb_pbp_plays[
  !is.na(mlb_pbp_plays$onSecond$athlete$id) |
  !is.na(mlb_pbp_plays$onThird$athlete$id),
]

# Hit coordinate analysis
hits_with_coords <- mlb_pbp_plays[
  !is.na(mlb_pbp_plays$hitCoordinate$x) &
  !is.na(mlb_pbp_plays$hitCoordinate$y),
]

# Get raw data for debugging
fetch_mlb_game_playbyplay(event_id = "401581132", raw = TRUE)
}

}
